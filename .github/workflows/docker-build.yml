name: Build, Push Docker Image, and Deploy to EC2

on:
  push:
    branches:
      - develop

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_C }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_C }}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/silvergeni:latest

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
            export AWS_DEFAULT_REGION=ap-south-1
            export PATH=$PATH:/usr/local/bin

            # Install unzip (needed for AWS CLI installer)
            sudo dnf install -y unzip || true

            # Install AWS CLI v2 if missing
            if ! command -v aws &> /dev/null; then
              echo "Installing AWS CLI..."
              curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
              unzip -o awscliv2.zip
              sudo ./aws/install
              export PATH=$PATH:/usr/local/bin
            fi

            # Install Docker CE if missing
            if ! command -v docker &> /dev/null; then
              echo "Installing Docker CE..."
              sudo dnf -y remove podman buildah || true
              sudo dnf -y install dnf-plugins-core
              sudo dnf config-manager --add-repo https://download.docker.com/linux/rhel/docker-ce.repo
              sudo dnf install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
            fi

            # Start Docker service
            sudo systemctl start docker
            sudo systemctl enable docker

            # Wait a few seconds for Docker daemon to start
            sleep 5

            # Authenticate Docker to AWS ECR
            aws ecr get-login-password --region ap-south-1 | sudo docker login --username AWS --password-stdin 779877233580.dkr.ecr.ap-south-1.amazonaws.com

            # Pull latest image
            sudo docker pull 779877233580.dkr.ecr.ap-south-1.amazonaws.com/silvergeni:latest

            # Stop and remove existing container (if any)
            sudo docker stop strapi-app || true
            sudo docker rm strapi-app || true

            # Run the new container
            sudo docker run -d -p 80:1337 --name strapi-app 779877233580.dkr.ecr.ap-south-1.amazonaws.com/silvergeni:latest


