name: Build, Push Docker Image, and Deploy to EC2

on:
  push:
    branches:
      - develop

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_C }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_C }}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/silvergeni:latest

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Install AWS CLI if not available
            if ! command -v aws &> /dev/null; then
              curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
              unzip -o awscliv2.zip
              sudo ./aws/install
            fi

            # Install Docker if not available
            if ! command -v docker &> /dev/null; then
              if [ -f /etc/debian_version ]; then
                sudo apt update -y
                sudo apt install -y docker.io
              elif [ -f /etc/redhat-release ]; then
                sudo yum update -y
                sudo yum install -y docker
              fi
              sudo systemctl start docker
              sudo systemctl enable docker
              sudo usermod -aG docker $USER
            fi

            # Wait briefly for Docker to start
            sleep 5

            # ECR login
            aws ecr get-login-password --region ap-south-1 | \
              docker login --username AWS \
              --password-stdin 043309329282.dkr.ecr.ap-south-1.amazonaws.com

            # Pull the latest image
            docker pull 043309329282.dkr.ecr.ap-south-1.amazonaws.com/silvergeni:latest

            # Stop and remove old container if it exists
            docker stop strapi-app || true
            docker rm strapi-app || true

            # Run the new container
            docker run -d -p 80:1337 \
              --name strapi-app \
              043309329282.dkr.ecr.ap-south-1.amazonaws.com/silvergeni:latest
